<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisProjectProfileManager">
    <option name="PROJECT_PROFILE" />
    <option name="USE_PROJECT_LEVEL_SETTINGS" value="false" />
    <list size="0" />
  </component>
  <component name="ExternalStorageConfigurationManager" enabled="true" />
  <component name="FrameworkDetectionExcludesConfiguration">
    <file type="web" url="file://$PROJECT_DIR$/016-springboot-character-properties" />
    <file type="web" url="file://$PROJECT_DIR$/025-springboot-war" />
  </component>
  <component name="JavaDocConfiguration">
    <GENERAL>
      <MODE>UPDATE</MODE>
      <OVERRIDDEN_METHODS>false</OVERRIDDEN_METHODS>
      <SPLITTED_CLASS_NAME>true</SPLITTED_CLASS_NAME>
      <LEVELS>
        <LEVEL>FIELD</LEVEL>
        <LEVEL>TYPE</LEVEL>
        <LEVEL>METHOD</LEVEL>
      </LEVELS>
      <VISIBILITIES>
        <VISIBILITY>PROTECTED</VISIBILITY>
        <VISIBILITY>DEFAULT</VISIBILITY>
        <VISIBILITY>PUBLIC</VISIBILITY>
      </VISIBILITIES>
    </GENERAL>
    <TEMPLATES>
      <CLASSES>
        <CLASS>
          <KEY>^.*(public|protected|private)*.+interface\s+\w+.*</KEY>
          <VALUE>/**\n
 * The interface ${name}.\n
&lt;#if element.typeParameters?has_content&gt;        * \n
&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;        * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt; */</VALUE>
        </CLASS>
        <CLASS>
          <KEY>^.*(public|protected|private)*.+enum\s+\w+.*</KEY>
          <VALUE>/**\n
 * The enum ${name}.\n
 */</VALUE>
        </CLASS>
        <CLASS>
          <KEY>^.*(public|protected|private)*.+class\s+\w+.*</KEY>
          <VALUE>/**\n
 * The type ${name}.\n
&lt;#if element.typeParameters?has_content&gt;        * \n
&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;        * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt; */</VALUE>
        </CLASS>
        <CLASS>
          <KEY>.+</KEY>
          <VALUE>/**\n
 * The type ${name}.\n
 */</VALUE>
        </CLASS>
      </CLASSES>
      <CONSTRUCTORS>
        <CONSTRUCTOR>
          <KEY>.+</KEY>
          <VALUE>/**\n
 * Instantiates a new ${name}.\n
&lt;#if element.parameterList.parameters?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt; */</VALUE>
        </CONSTRUCTOR>
      </CONSTRUCTORS>
      <METHODS>
        <METHOD>
          <KEY>^.*(public|protected|private)*\s*.*(\w(\s*&lt;.+&gt;)*)+\s+get\w+\s*\(.*\).+</KEY>
          <VALUE>/**\n
 * Gets ${partName}.\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;&lt;#if element.parameterList.parameters?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;&lt;#if isNotVoid&gt;         *\n
         * @return the ${partName}\n
&lt;/#if&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt; */</VALUE>
        </METHOD>
        <METHOD>
          <KEY>^.*(public|protected|private)*\s*.*(void|\w(\s*&lt;.+&gt;)*)+\s+set\w+\s*\(.*\).+</KEY>
          <VALUE>/**\n
 * Sets ${partName}.\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;&lt;#if element.parameterList.parameters?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;&lt;#if isNotVoid&gt;         *\n
         * @return the ${partName}\n
&lt;/#if&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt; */</VALUE>
        </METHOD>
        <METHOD>
          <KEY>^.*((public\s+static)|(static\s+public))\s+void\s+main\s*\(\s*String\s*(\[\s*\]|\.\.\.)\s+\w+\s*\).+</KEY>
          <VALUE>/**\n
 * The entry point of application.\n

     &lt;#if element.parameterList.parameters?has_content&gt;         *\n
&lt;/#if&gt;     * @param ${element.parameterList.parameters[0].name} the input arguments\n
&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt; */</VALUE>
        </METHOD>
        <METHOD>
          <KEY>.+</KEY>
          <VALUE>/**\n
 * ${name}&lt;#if isNotVoid&gt; ${return}&lt;/#if&gt;.\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;&lt;#if element.parameterList.parameters?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;&lt;#if isNotVoid&gt;         *\n
         * @return the ${return}\n
&lt;/#if&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt; */</VALUE>
        </METHOD>
      </METHODS>
      <FIELDS>
        <FIELD>
          <KEY>^.*(public|protected|private)*.+static.*(\w\s\w)+.+</KEY>
          <VALUE>/**\n
 * The constant ${element.getName()}.\n
 */</VALUE>
        </FIELD>
        <FIELD>
          <KEY>^.*(public|protected|private)*.*(\w\s\w)+.+</KEY>
          <VALUE>/**\n
    &lt;#if element.parent.isInterface()&gt;        * The constant ${element.getName()}.\n
&lt;#else&gt;        * The ${name}.\n
&lt;/#if&gt; */</VALUE>
        </FIELD>
        <FIELD>
          <KEY>.+</KEY>
          <VALUE>/**\n
    &lt;#if element.parent.isEnum()&gt;        *${name} ${typeName}.\n
&lt;#else&gt;        * The ${name}.\n
&lt;/#if&gt;*/</VALUE>
        </FIELD>
      </FIELDS>
    </TEMPLATES>
  </component>
  <component name="MavenProjectsManager">
    <option name="originalFiles">
      <list>
        <option value="$PROJECT_DIR$/001-springboot-pre/pom.xml" />
        <option value="$PROJECT_DIR$/002-springboot-first/pom.xml" />
        <option value="$PROJECT_DIR$/003-springboot-second/pom.xml" />
        <option value="$PROJECT_DIR$/springboot-004-third/pom.xml" />
        <option value="$PROJECT_DIR$/004-springboot-third/pom.xml" />
        <option value="$PROJECT_DIR$/005-springboot-mvc/pom.xml" />
        <option value="$PROJECT_DIR$/006-springboot-environment/pom.xml" />
        <option value="$PROJECT_DIR$/A007-springboot-multi-envoronment/pom.xml" />
        <option value="$PROJECT_DIR$/008-springboot-yml/pom.xml" />
        <option value="$PROJECT_DIR$/007-springboot-multi-environment/pom.xml" />
        <option value="$PROJECT_DIR$/a009-springboot-jsp/pom.xml" />
        <option value="$PROJECT_DIR$/009-springboot-jsp/pom.xml" />
        <option value="$PROJECT_DIR$/010-springboot-container/pom.xml" />
        <option value="$PROJECT_DIR$/011-springboot-commandlinerunner/pom.xml" />
        <option value="$PROJECT_DIR$/a012-sprinboot-interceptor/pom.xml" />
        <option value="$PROJECT_DIR$/012-springboot-interceptor/pom.xml" />
        <option value="$PROJECT_DIR$/a013-springboot-servlet/pom.xml" />
        <option value="$PROJECT_DIR$/013-springboot-servlet/pom.xml" />
        <option value="$PROJECT_DIR$/a014-springboot-filter/pom.xml" />
        <option value="$PROJECT_DIR$/014-springboot-filter/pom.xml" />
        <option value="$PROJECT_DIR$/015-springboot-character-filter/pom.xml" />
        <option value="$PROJECT_DIR$/016-springboot-character-properties/pom.xml" />
        <option value="$PROJECT_DIR$/017-springboot-mapper/pom.xml" />
        <option value="$PROJECT_DIR$/018-springboot-mapperscan/pom.xml" />
        <option value="$PROJECT_DIR$/019-springboot-transactional/pom.xml" />
        <option value="$PROJECT_DIR$/020-springboot-restful/pom.xml" />
        <option value="$PROJECT_DIR$/021-springboot-redis/pom.xml" />
        <option value="$PROJECT_DIR$/a021-interface-api/pom.xml" />
        <option value="$PROJECT_DIR$/021-interface-api/pom.xml" />
        <option value="$PROJECT_DIR$/022-interface-api/pom.xml" />
        <option value="$PROJECT_DIR$/023-service-provider/pom.xml" />
        <option value="$PROJECT_DIR$/024-consumer/pom.xml" />
        <option value="$PROJECT_DIR$/a025-springboot-war/pom.xml" />
        <option value="$PROJECT_DIR$/025-springboot-war/pom.xml" />
        <option value="$PROJECT_DIR$/026-springboot-jar/pom.xml" />
        <option value="$PROJECT_DIR$/027-thymeleaf-first/pom.xml" />
        <option value="$PROJECT_DIR$/028-thymeleaf-course/pom.xml" />
        <option value="$PROJECT_DIR$/demo-api/pom.xml" />
        <option value="$PROJECT_DIR$/demo-student_service/pom.xml" />
        <option value="$PROJECT_DIR$/demo-consumer/pom.xml" />
      </list>
    </option>
  </component>
  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8.0.271" project-jdk-type="JavaSDK">
    <output url="file://$PROJECT_DIR$/out" />
  </component>
  <component name="SuppressionsComponent">
    <option name="suppComments" value="[]" />
  </component>
</project>